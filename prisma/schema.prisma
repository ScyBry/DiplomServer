generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  email    String @unique
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isBlocked Boolean  @default(false) @map("is_blocked")

  @@map("users")
}

model Department {
  id     String  @id @default(uuid())
  name   String  @unique
  groups Group[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("departments")
}

model Teacher {
  id         String   @id @default(uuid())
  firstName  String
  lastName   String
  surname    String
  totalHours Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  subjects TeacherSubject[] @relation(name: "TeacherSubjectRelation")
}

model Subject {
  id            String @unique @default(uuid())
  name          String @unique
  hoursPerGroup Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  teachers      TeacherSubject[] @relation(name: "TeacherSubjectRelation")
  Group         Group?           @relation(fields: [groupId], references: [id])
  groupId       String?
  DaySchedule   DaySchedule?     @relation(fields: [dayScheduleId], references: [id])
  dayScheduleId String?
}

model TeacherSubject {
  teacher   Teacher @relation(fields: [teacherId], references: [id], name: "TeacherSubjectRelation")
  teacherId String
  subject   Subject @relation(fields: [subjectId], references: [id], name: "TeacherSubjectRelation")
  subjectId String

  @@id([teacherId, subjectId])
}

model Group {
  id           String        @id @default(uuid())
  name         String        @unique
  Department   Department?   @relation(fields: [departmentId], references: [id], onDelete: Cascade)
  departmentId String?
  subjects     Subject[]
  shedules     DaySchedule[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("groups")
}

model DaySchedule {
  id        String    @id @default(uuid())
  dayOfWeak String
  subjects  Subject[]

  Group   Group?  @relation(fields: [groupId], references: [id])
  groupId String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
